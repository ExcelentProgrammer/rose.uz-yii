<?php

namespace app\controllers;

use app\models\Orders;
use app\models\Pages;
use Yii;
use yii\web\Controller;
use yii\web\NotFoundHttpException;

class PagesController extends Controller
{
    public $enableCsrfValidation = false;

    public function beforeAction($action)
    {
        $lang = Yii::$app->request->cookies->get('language');
        if (empty($lang)) {
            $lang = "ru";
        }
        Yii::$app->language = $lang;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * Displays a single Category model.
     *
     * @param string $url
     * @throws NotFoundHttpException
     */
    public function actionView($url)
    {
        $model = $this->findModel($url);
        return $this->render($url, [
            'model' => $model
        ]);
    }

    public function actionState()
    {
        $order_id = null;
        $model = null;
        if (Yii::$app->request->isPost) {
            $order_id = Yii::$app->request->post("order_id");
            $model = Orders::find()->where('id=:id and state>=0 and system_id=:s', [':id' => $order_id, ':s' => Yii::$app->params['system']])->one();
        }
        return $this->render('state', [
            'model' => $model,
            'order_id' => $order_id,
        ]);
    }

    /**
     * Finds the Pages model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param string $url
     * @return Pages the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($url)
    {
        if (($model = Pages::findOne(['url' => $url])) !== null) {
            return $model;
        }

        throw new NotFoundHttpException('The requested page does not exist.');
    }
}
